{"ast":null,"code":"var _jsxFileName = \"/Users/markmarley/Desktop/React_Course/food-order-app/Food-App/src/components/store/CartProvider.js\";\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  var _s = $RefreshSig$();\n\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  const CartProvider = props => {\n    _s();\n\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n    const addItemToCartHandler = item => {\n      dispatchCartAction({\n        type: \"ADD\",\n        item: item\n      });\n    };\n\n    const removeItemFromCartHandler = id => {\n      dispatchCartAction({\n        type: \"REMOVE\",\n        id: id\n      });\n    };\n\n    const cartContext = {\n      items: cartState.items,\n      totalAmount: cartState.totalAmount,\n      addItem: addItemToCartHandler,\n      removeItem: removeItemFromCartHandler\n    };\n    return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n      value: cartContext,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n};\n\nexport default CartProvider;","map":{"version":3,"sources":["/Users/markmarley/Desktop/React_Course/food-order-app/Food-App/src/components/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","existingCartItemIndex","findIndex","id","existingItem","filter","updatedItem","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAAA;;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GACtBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MADtD;AAEA,WAAO;AACLX,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAMO,qBAAqB,GAAGT,KAAK,CAACH,KAAN,CAAYa,SAAZ,CAC3BL,IAAD,IAAUA,IAAI,CAACM,EAAL,KAAYV,MAAM,CAACI,IAAP,CAAYM,EADN,CAA9B;AAGA,UAAMC,YAAY,GAAGZ,KAAK,CAACH,KAAN,CAAYY,qBAAZ,CAArB;AACA,UAAMH,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBc,YAAY,CAACL,KAA5D;AACA,QAAIJ,YAAJ;;AACA,QAAIS,YAAY,CAACJ,MAAb,KAAwB,CAA5B,EAA+B;AAC7BL,MAAAA,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAoBR,IAAD,IAAUA,IAAI,CAACM,EAAL,KAAYV,MAAM,CAACU,EAAhD,CAAf;AACD,KAFD,MAEO;AACL,YAAMG,WAAW,GAAG,EAAE,GAAGF,YAAL;AAAmBJ,QAAAA,MAAM,EAAEI,YAAY,CAACJ,MAAb,GAAsB;AAAjD,OAApB;AACAL,MAAAA,YAAY,GAAG,CAAC,GAAGH,KAAK,CAACH,KAAV,CAAf;AACAM,MAAAA,YAAY,CAACM,qBAAD,CAAZ,GAAsCK,WAAtC;AACD;;AACD,WAAO;AACLjB,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AAED,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,UAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCxB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,UAAMuB,oBAAoB,GAAId,IAAD,IAAU;AACrCa,MAAAA,kBAAkB,CAAC;AAAEhB,QAAAA,IAAI,EAAE,KAAR;AAAeG,QAAAA,IAAI,EAAEA;AAArB,OAAD,CAAlB;AACD,KAFD;;AAIA,UAAMe,yBAAyB,GAAIT,EAAD,IAAQ;AACxCO,MAAAA,kBAAkB,CAAC;AAAEhB,QAAAA,IAAI,EAAE,QAAR;AAAkBS,QAAAA,EAAE,EAAEA;AAAtB,OAAD,CAAlB;AACD,KAFD;;AAIA,UAAMU,WAAW,GAAG;AAClBxB,MAAAA,KAAK,EAAEoB,SAAS,CAACpB,KADC;AAElBC,MAAAA,WAAW,EAAEmB,SAAS,CAACnB,WAFL;AAGlBwB,MAAAA,OAAO,EAAEH,oBAHS;AAIlBI,MAAAA,UAAU,EAAEH;AAJM,KAApB;AAOA,wBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEC,WAA7B;AAAA,gBACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GA1BD;;AA9BqC,KA8B/BT,YA9B+B;AAyDtC,CAzDD;;AA0DA,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\n\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  const CartProvider = (props) => {\n    const [cartState, dispatchCartAction] = useReducer(\n      cartReducer,\n      defaultCartState\n    );\n\n    const addItemToCartHandler = (item) => {\n      dispatchCartAction({ type: \"ADD\", item: item });\n    };\n\n    const removeItemFromCartHandler = (id) => {\n      dispatchCartAction({ type: \"REMOVE\", id: id });\n    };\n\n    const cartContext = {\n      items: cartState.items,\n      totalAmount: cartState.totalAmount,\n      addItem: addItemToCartHandler,\n      removeItem: removeItemFromCartHandler,\n    };\n\n    return (\n      <CartContext.Provider value={cartContext}>\n        {props.children}\n      </CartContext.Provider>\n    );\n  };\n};\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}